import { Injectable, Inject, PLATFORM_ID } from '@angular/core';
import { CanActivate, Router } from '@angular/router';
import { AuthService } from '../services/auth.service';
import Swal from 'sweetalert2';
import { isPlatformBrowser } from '@angular/common';

@Injectable({ providedIn: 'root' })
export class AuthGuard implements CanActivate {
  constructor(
    private auth: AuthService,
    private router: Router,
    @Inject(PLATFORM_ID) private platformId: Object // ‚úÖ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Browser ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  ) {}

  canActivate(): boolean {
    const user = this.auth.getUser();

    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ userId ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    if (user && user.userId) {
      return true;
    }

    // ‚ùå ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login ‚Üí ‡πÅ‡∏™‡∏î‡∏á SweetAlert2 (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ù‡∏±‡πà‡∏á Browser)
    if (isPlatformBrowser(this.platformId)) {
      Swal.fire({
        icon: 'warning',
        title: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
        text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
        confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á',
        confirmButtonColor: '#3085d6',
        customClass: {
          popup: 'rounded-xl shadow-lg',
        }
      }).then(() => {
        this.router.navigate(['/login']);
      });
    } else {
      // üö® ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ù‡∏±‡πà‡∏á Server SSR ‚Üí ‡πÅ‡∏Ñ‡πà redirect ‡πÄ‡∏â‡∏¢ ‡πÜ (‡πÑ‡∏°‡πà‡∏°‡∏µ alert)
      this.router.navigate(['/login']);
    }

    return false;
  }
}
